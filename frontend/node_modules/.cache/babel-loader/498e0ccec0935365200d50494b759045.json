{"ast":null,"code":"import axios from 'axios';\nvar instanceOfItem;\nexport default {\n  name: \"EmployeeData\",\n\n  data() {\n    return {\n      email: '',\n      search: \"\",\n      nameRules: [v => !!v || \"Name is required\", v => v && v.length <= 10 || \"Name must be less than 10 characters\"],\n      emailRules: [v => !!v || \"E-mail is required\", v => /.+@.+\\..+/.test(v) || \"E-mail must be valid\"],\n      dialog: false,\n      table: \"\",\n      searchTable: \"\",\n      tableData: \"\",\n      flag: false,\n      boolValue: true,\n      submitButton: true\n    };\n  },\n\n  filters: {\n    truncate: function (name, num) {\n      const reqdString = name.split(\"\").slice(0, num).join(\"\");\n      return reqdString;\n    }\n  },\n\n  mounted() {\n    axios.get(`http://127.0.0.1:3333/displayData`).then(response => {\n      // JSON responses are \n      // automatically parsed\n      this.table = response.data;\n    });\n  },\n\n  methods: {\n    read() {\n      axios.get(`http://127.0.0.1:3333/displayData`).then(response => {\n        // JSON responses are \n        // automatically parsed\n        this.table = response.data;\n      });\n    },\n\n    async submit() {\n      const sub = await axios.post(`http://127.0.0.1:3333/insertData`, {\n        name: this.name,\n        email: this.email\n      });\n      console.log(sub);\n      this.read();\n      this.dialog = false;\n    },\n\n    press() {\n      this.boolValue = true;\n    },\n\n    async update(row) {\n      this.boolValue = false;\n      instanceOfItem = row;\n      this.name = row.name;\n      this.email = row.email;\n      this.dialog = true;\n      this.submitButton = false;\n    },\n\n    async edit() {\n      instanceOfItem.name = this.name;\n      instanceOfItem.email = this.email;\n      await axios.put(`http://127.0.0.1:3333/updateData/${instanceOfItem.name}`, {\n        name: instanceOfItem.name,\n        email: instanceOfItem.email\n      });\n    },\n\n    async deleteData(name) {\n      await axios.delete(`http://127.0.0.1:3333/deleteData/${name}`);\n      this.read();\n    },\n\n    serachEmpDataReciever(value) {\n      this.table = value.data;\n      console.log(value);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAkEA;AACA;AACA;EACAA,oBADA;;EAEAC;IACA;MACAC,SADA;MAEAC,UAFA;MAGAC,YACAC,8BADA,EAEAA,kEAFA,CAHA;MAOAC,aACAD,gCADA,EAEAA,kDAFA,CAPA;MAWAE,aAXA;MAYAC,SAZA;MAaAC,eAbA;MAcAC,aAdA;MAeAC,WAfA;MAgBAC,eAhBA;MAiBAC;IAjBA;EAmBA,CAtBA;;EAuBAC;IACAC;MACA;MACA;IACA;EAJA,CAvBA;;EA6BAC;IACAC,+CACAC,IADA,CACAC;MACA;MACA;MACA;IACA,CALA;EAMA,CApCA;;EAqCAC;IACAC;MACAJ;QACA;QACA;QACA;MACA,CAJA;IAKA,CAPA;;IAQA;MACA;QACAjB,eADA;QAEAE;MAFA;MAIAoB;MACA;MACA;IACA,CAhBA;;IAiBAC;MACA;IACA,CAnBA;;IAoBA;MACA;MACAC;MACA;MACA;MACA;MACA;IACA,CA3BA;;IA4BA;MACAA;MACAA;MACA;QACAxB,yBADA;QAEAE;MAFA;IAIA,CAnCA;;IAoCA;MACA;MACA;IACA,CAvCA;;IAwCAuB;MACA;MACAH;IACA;;EA3CA;AArCA","names":["name","data","email","search","nameRules","v","emailRules","dialog","table","searchTable","tableData","flag","boolValue","submitButton","filters","truncate","mounted","axios","then","response","methods","read","console","press","instanceOfItem","serachEmpDataReciever"],"sourceRoot":"src/components","sources":["Employee.vue"],"sourcesContent":["<template>\n  <v-container>\n    <SearchComponent @empDataSender=\"serachEmpDataReciever($event)\" />\n    <template>\n      <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n        <v-dialog v-model=\"dialog\" max-width=\"600px\">\n          <template v-slot:activator=\"{ on, attrs }\">\n            <v-btn class=\"mb-2\" small @click=\"press()\" v-bind=\"attrs\" v-on=\"on\" fab color=\"indigo\">\n              <v-icon small>mdi-plus</v-icon>\n            </v-btn>\n          </template>\n          <v-card>\n            <v-card-title>\n              <span class=\"text-h5\">User Data</span>\n            </v-card-title>\n            <v-card-text>\n              <v-row>\n                <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                  <v-text-field v-model=\"name\" outlined label=\"Enter your name\" required>\n                  </v-text-field>\n                </v-col>\n                <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                  <v-text-field v-model=\"email\" :rules=\"emailRules\" outlined label=\"Enter your email\" required>\n                  </v-text-field>\n                </v-col>\n              </v-row>\n              <v-btn color=\"success\" v-model=\"submitButton\" @click=\"submit()\" v-if=\"boolValue\">\n                Submit\n              </v-btn>\n              <v-btn color=\"success\" @click=\"edit()\" v-else>\n                Update\n              </v-btn>\n            </v-card-text>\n          </v-card>\n        </v-dialog>\n      </v-form>\n      <div>\n        <v-simple-table fixed-header>\n          <thead>\n            <tr>\n              <th class=\"text-left\">Name</th>\n              <th class=\"text-left\">Email</th>\n              <th class=\"text-left\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"row in table\" :key=\"row.name\">\n              <td>{{row.name}}</td>\n              <td>{{row.email}}</td>\n              <td>\n                <v-btn fab class=\"mb-2\" small color=\"cyan\" dark @click=\"update(row)\">\n                  <v-icon small>mdi-pencil</v-icon>\n                </v-btn>\n                <v-btn fab class=\"mb-2\" @click=\"deleteData(row.name)\" small color=\"pink\">\n                  <v-icon small>mdi-delete</v-icon>\n                </v-btn>\n              </td>\n            </tr>\n          </tbody>\n        </v-simple-table>\n      </div>\n    </template>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\nvar instanceOfItem;\nexport default {\n  name: \"EmployeeData\",\n  data() {\n    return {\n      email:'',\n      search: \"\",\n      nameRules: [\n        v => !!v || \"Name is required\",\n        v => (v && v.length <= 10) || \"Name must be less than 10 characters\",\n      ],\n      emailRules: [\n        v => !!v || \"E-mail is required\",\n        v => /.+@.+\\..+/.test(v) || \"E-mail must be valid\",\n      ],\n      dialog: false,\n      table: \"\",\n      searchTable: \"\",\n      tableData: \"\",\n      flag: false,\n      boolValue: true,\n      submitButton: true,\n    };\n  },\n  filters: {\n    truncate: function (name, num) {\n      const reqdString = name.split(\"\").slice(0, num).join(\"\");\n      return reqdString;\n    }\n  },\n  mounted() {\n    axios.get(`http://127.0.0.1:3333/displayData`)\n      .then(response => {\n        // JSON responses are \n        // automatically parsed\n        this.table = response.data;\n      });\n  },\n  methods: {\n    read() {\n      axios.get(`http://127.0.0.1:3333/displayData`).then(response => {\n        // JSON responses are \n        // automatically parsed\n        this.table = response.data;\n      });\n    },\n    async submit() {\n      const sub = await axios.post(`http://127.0.0.1:3333/insertData`, {\n        name: this.name,\n        email: this.email\n      });\n      console.log(sub);\n      this.read();\n      this.dialog = false;\n    },\n    press() {\n      this.boolValue = true;\n    },\n    async update(row) {\n      this.boolValue = false;\n      instanceOfItem = row;\n      this.name = row.name;\n      this.email = row.email;\n      this.dialog = true;\n      this.submitButton = false;\n    },\n    async edit() {\n      instanceOfItem.name = this.name;\n      instanceOfItem.email = this.email;\n      await axios.put(`http://127.0.0.1:3333/updateData/${instanceOfItem.name}`, {\n        name: instanceOfItem.name,\n        email: instanceOfItem.email\n      });\n    },\n    async deleteData(name) {\n      await axios.delete(`http://127.0.0.1:3333/deleteData/${name}`);\n      this.read();\n    },\n    serachEmpDataReciever(value) {\n      this.table = value.data\n      console.log(value)\n    },\n  },\n\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}