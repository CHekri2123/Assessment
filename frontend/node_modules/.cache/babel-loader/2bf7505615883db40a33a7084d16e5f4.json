{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport EmployeeView from '../views/EmployeeView.vue';\nVue.use(VueRouter);\nconst routes = [{\n  path: '/emp',\n  name: 'EmployeeView',\n  component: EmployeeView\n}, {\n  path: '/dept',\n  name: 'DeptView',\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: () => import(\n  /* webpackChunkName: \"about\" */\n  '../views/Departme.vue')\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","EmployeeView","use","routes","path","name","component","router","mode","base","process","env","BASE_URL"],"sources":["/home/kalyan/Documents/vue/restapiwithroutes/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport EmployeeView from '../views/EmployeeView.vue'\n\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/emp',  \n    name: 'EmployeeView',\n    component: EmployeeView\n  },\n  {\n    path: '/dept',\n    name: 'DeptView',\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/Departme.vue')\n  }\n]\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n})\n\nexport default router\n"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AAEAF,GAAG,CAACG,GAAJ,CAAQF,SAAR;AAEA,MAAMG,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,MADR;EAEEC,IAAI,EAAE,cAFR;EAGEC,SAAS,EAAEL;AAHb,CADa,EAMb;EACEG,IAAI,EAAE,OADR;EAEEC,IAAI,EAAE,UAFR;EAGE;EACA;EACA;EACAC,SAAS,EAAE,MAAM;EAAO;EAAgC,uBAAvC;AANnB,CANa,CAAf;AAgBA,MAAMC,MAAM,GAAG,IAAIP,SAAJ,CAAc;EAC3BQ,IAAI,EAAE,SADqB;EAE3BC,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAFS;EAG3BT;AAH2B,CAAd,CAAf;AAMA,eAAeI,MAAf"},"metadata":{},"sourceType":"module"}