{"ast":null,"code":"import _regeneratorRuntime from \"/home/kalyan/Documents/WebApplicationBackend/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/kalyan/Documents/WebApplicationBackend/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport axios from 'axios'; // Here instanceOfItem saves the index of the particular rows of the data when edit button is clicked\n\nvar instanceOfItem;\nexport default {\n  name: \"CustomerCrud\",\n  data: function data() {\n    return {\n      countTable: [],\n      id: '',\n      customer_id: '',\n      customer_name: '',\n      branch_name: '',\n      customerTable: [],\n      valid: '',\n      dialog: false,\n      flag: false,\n      boolValue: true,\n      updateButton: true,\n      submitButton: true\n    };\n  },\n  mounted: function mounted() {\n    this.read();\n  },\n  methods: {\n    read: function read() {\n      var _this = this;\n\n      axios.get(process.env.VUE_APP_GET_LINK).then(function (response) {\n        _this.customerTable = response.data.data;\n      });\n    },\n    submit: function submit() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var sub;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.post(process.env.VUE_APP_POST_LINK, {\n                  id: _this2.id,\n                  customer_id: _this2.customer_id,\n                  customer_name: _this2.customer_name\n                });\n\n              case 2:\n                sub = _context.sent;\n\n                _this2.read();\n\n                _this2.dialog = false;\n\n                _this2.$refs.form.reset();\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    press: function press() {\n      this.boolValue = true;\n    },\n    update: function update(row) {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                instanceOfItem = row;\n                console.log(instanceOfItem);\n                console.log('Pencil button clicked');\n                _this3.id = row.id;\n                _this3.customer_id = row.customer_id;\n                _this3.customer_name = row.customer_name;\n                _this3.boolValue = false;\n                _this3.dialog = true;\n                _this3.submitButton = false;\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    edit: function edit() {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                console.log(\"Update button clicked\");\n                console.log(instanceOfItem);\n                instanceOfItem.id = _this4.id;\n                instanceOfItem.customer_id = _this4.customer_id;\n                instanceOfItem.customer_name = _this4.customer_name;\n                _context3.next = 7;\n                return axios.put(\"\".concat(process.env.VUE_APP_PUT_LINK, \"/\").concat(instanceOfItem.id), {\n                  customer_id: _this4.customer_id,\n                  customer_name: _this4.customer_name\n                });\n\n              case 7:\n                _this4.$refs.form.reset();\n\n                _this4.read();\n\n                _this4.dialog = false;\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    deleteData: function deleteData(id) {\n      var _this5 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return axios[\"delete\"](\"\".concat(process.env.VUE_APP_DELETE_LINK, \"/\").concat(id));\n\n              case 2:\n                _this5.read();\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    serachEmpDataReciever: function serachEmpDataReciever(input) {\n      var _this6 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var searchPromise;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return axios.post('http://127.0.0.1:3333/searchCustomerData', {\n                  'term': input\n                });\n\n              case 2:\n                searchPromise = _context5.sent;\n                _this6.customerTable = searchPromise.data.newSearchData;\n                console.log(input);\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    },\n    SortAscending: function SortAscending(val) {\n      var _this7 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                console.log('Up button clicked');\n                console.log(val);\n                axios.post(\"http://127.0.0.1:3333/sortCustomerDataAsc\", {\n                  columnName: val\n                }).then(function (response) {\n                  _this7.customerTable = response.data.sort;\n                });\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    },\n    SortDescending: function SortDescending(val) {\n      var _this8 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                console.log('Down button clicked');\n                axios.post(\"http://127.0.0.1:3333/sortCustomerDataDesc\", {\n                  columnName: val\n                }).then(function (response) {\n                  _this8.customerTable = response.data.sort;\n                });\n\n              case 2:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;AAqFA,0B,CACA;;AACA;AAEA;EACAA,oBADA;EAEAC,IAFA,kBAEA;IACA;MACAC,cADA;MAEAC,MAFA;MAGAC,eAHA;MAIAC,iBAJA;MAKAC,eALA;MAMAC,iBANA;MAOAC,SAPA;MAQAC,aARA;MASAC,WATA;MAUAC,eAVA;MAWAC,kBAXA;MAYAC;IAZA;EAcA,CAjBA;EAmBAC,OAnBA,qBAmBA;IACA;EACA,CArBA;EAwBAC;IAEAC,IAFA,kBAEA;MAAA;;MAEAC;QAEA;MAEA,CAJA;IAMA,CAVA;IAYAC,MAZA,oBAYA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OAEAD;kBAEAd,aAFA;kBAGAC,+BAHA;kBAIAC;gBAJA,EAFA;;cAAA;gBAEAc,GAFA;;gBAUA;;gBAEA;;gBAEA;;cAdA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAgBA,CA5BA;IA8BAC,KA9BA,mBA8BA;MAEA;IAEA,CAlCA;IAoCAC,MApCA,kBAoCAC,GApCA,EAoCA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBAEAC;gBAEAC;gBAEAA;gBAEA;gBAEA;gBAEA;gBAEA;gBAEA;gBAEA;;cAlBA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAoBA,CAxDA;IA0DAC,IA1DA,kBA0DA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBAEAD;gBAEAA;gBAEAD;gBAEAA;gBAEAA;gBAVA;gBAAA,OAYAN;kBAEAb,+BAFA;kBAGAC;gBAHA,EAZA;;cAAA;gBAmBA;;gBAEA;;gBAEA;;cAvBA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAyBA,CAnFA;IAsFAqB,UAtFA,sBAsFAvB,EAtFA,EAsFA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OAEAc,2EAFA;;cAAA;gBAIA;;cAJA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAMA,CA5FA;IA8FAU,qBA9FA,iCA8FAC,KA9FA,EA8FA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OAEAX;kBAAA;gBAAA,EAFA;;cAAA;gBAEAY,aAFA;gBAIA;gBAEAL;;cANA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAQA,CAtGA;IAwGAM,aAxGA,yBAwGAC,GAxGA,EAwGA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBACAP;gBACAA;gBACAP;kBACAe;gBADA,GAEAC,IAFA,CAEA;kBACA;gBACA,CAJA;;cAHA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAQA,CAhHA;IAkHAC,cAlHA,0BAkHAH,GAlHA,EAkHA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBACAP;gBACAP;kBACAe;gBADA,GAEAC,IAFA,CAEA;kBACA;gBACA,CAJA;;cAFA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAOA;EAzHA;AAxBA","names":["name","data","countTable","id","customer_id","customer_name","branch_name","customerTable","valid","dialog","flag","boolValue","updateButton","submitButton","mounted","methods","read","axios","submit","sub","press","update","row","instanceOfItem","console","edit","deleteData","serachEmpDataReciever","input","searchPromise","SortAscending","val","columnName","then","SortDescending"],"sourceRoot":"src/components","sources":["Customer.vue"],"sourcesContent":["<template>\n  <v-container>\n    <!--Global Search Button -->\n    <SearchComponent @empDataSender=\"serachEmpDataReciever($event)\" />\n    <template>\n      <!-- Form opens, when plus button on the UI get clicked -->\n      <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n        <v-dialog v-model=\"dialog\" max-width=\"600px\">\n          <template v-slot:activator=\"{ on, attrs }\">\n            <v-btn class=\"mb-2\" small @click=\"press()\" v-bind=\"attrs\" v-on=\"on\" fab color=\"indigo\">\n              <v-icon small>mdi-plus</v-icon>\n            </v-btn>\n          </template>\n          <v-card>\n            <v-card-title>\n              <span class=\"text-h5\">Customer Data</span>\n            </v-card-title>\n            <v-card-text>\n              <v-row>\n                <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                  <v-text-field v-model=\"id\" outlined label=\"Enter your Id\" required>\n                  </v-text-field>\n                </v-col>\n                <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                  <v-text-field v-model=\"customer_id\" outlined label=\"Enter Customer Id\" required>\n                  </v-text-field>\n                </v-col>\n                <v-col>\n                  <v-text-field v-model=\"customer_name\" outlined label=\"Enter Customer Name\" required>\n                  </v-text-field>\n                </v-col>\n              </v-row>\n            </v-card-text>\n            <v-card-actions>\n              <v-btn color=\"success\" v-model=\"submitButton\" @click=\"submit()\" v-if=\"boolValue\">\n                Submit\n              </v-btn>\n              <v-btn color=\"success\" v-model=\"updateButton\" @click=\"edit()\" v-else>\n                Update\n              </v-btn>\n            </v-card-actions>\n          </v-card>\n        </v-dialog>\n      </v-form>\n      <div>\n        <v-simple-table fixed-header>\n          <thead>\n            <tr>\n              <th class=\"text-left\">Id\n                <v-icon @click=\"SortAscending(val='id')\">mdi-arrow-up</v-icon>\n                <v-icon @click=\"SortDescending(val='id')\">mdi-arrow-down</v-icon>\n              </th>\n              <th class=\"text-left\">Customer Id\n                <v-icon @click=\"SortAscending(val='customer_name')\">mdi-arrow-up</v-icon>\n                <v-icon @click=\"SortDescending(val='customer_name')\">mdi-arrow-down</v-icon>\n              </th>\n              <th class=\"text-left\">Customer Name</th>\n              <th class=\"text-left\">Count of Hotels</th>\n              <th class=\"text-left\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"row in customerTable\" :key=\"row.id\">\n              <td>{{row.id}}</td>\n              <td>{{row.customer_id}}</td>\n              <td>{{row.customer_name}}</td>\n <!-- countTable contains Data of the count of tables came from backend, where column name is count -->\n              <td>{{row.count}}</td>\n              <td>\n                <v-btn fab class=\"mb-2\" small color=\"cyan\" dark @click=\"update(row)\">\n                  <v-icon small>mdi-pencil</v-icon>\n                </v-btn>\n                <v-btn fab class=\"mb-2\" @click=\"deleteData(row.id)\" small color=\"pink\">\n                  <v-icon small>mdi-delete</v-icon>\n                </v-btn>\n              </td>\n            </tr>\n          </tbody>\n        </v-simple-table>\n      </div>\n    </template>\n  </v-container>\n</template>\n\n<script>\nimport axios from 'axios';\n// Here instanceOfItem saves the index of the particular rows of the data when edit button is clicked\nvar instanceOfItem;\n\nexport default {\n  name: \"CustomerCrud\",\n  data() {\n    return {\n      countTable: [],\n      id: '',\n      customer_id: '',\n      customer_name: '',\n      branch_name: '',\n      customerTable: [],\n      valid: '',\n      dialog: false,\n      flag: false,\n      boolValue: true,\n      updateButton: true,\n      submitButton: true,\n    };\n  },\n\n  mounted() {\n    this.read()\n  },\n\n\n  methods: {\n\n    read() {\n\n      axios.get(process.env.VUE_APP_GET_LINK).then(response => {\n\n        this.customerTable = response.data.data\n\n      })\n\n    },\n\n    async submit() {\n\n      const sub = await axios.post(process.env.VUE_APP_POST_LINK, {\n\n        id: this.id,\n        customer_id: this.customer_id,\n        customer_name: this.customer_name\n\n      });\n\n      this.read();\n\n      this.dialog = false;\n\n      this.$refs.form.reset()\n\n    },\n\n    press() {\n\n      this.boolValue = true;\n\n    },\n\n    async update(row) {\n\n      instanceOfItem = row\n\n      console.log(instanceOfItem);\n\n      console.log('Pencil button clicked')\n\n      this.id = row.id;\n\n      this.customer_id = row.customer_id;\n\n      this.customer_name = row.customer_name;\n\n      this.boolValue = false;\n\n      this.dialog = true;\n\n      this.submitButton = false;\n\n    },\n\n    async edit() {\n\n      console.log(\"Update button clicked\")\n\n      console.log(instanceOfItem)\n\n      instanceOfItem.id = this.id\n\n      instanceOfItem.customer_id = this.customer_id\n\n      instanceOfItem.customer_name = this.customer_name\n\n      await axios.put(`${process.env.VUE_APP_PUT_LINK}/${instanceOfItem.id}`, {\n\n        customer_id: this.customer_id,\n        customer_name: this.customer_name\n\n      });\n\n      this.$refs.form.reset()\n\n      this.read()\n\n      this.dialog = false;\n\n    },\n\n\n    async deleteData(id) {\n\n      await axios.delete(`${process.env.VUE_APP_DELETE_LINK}/${id}`);\n\n      this.read();\n\n    },\n\n    async serachEmpDataReciever(input) {\n\n      const searchPromise = await axios.post('http://127.0.0.1:3333/searchCustomerData', { 'term': input })\n\n      this.customerTable = searchPromise.data.newSearchData\n\n      console.log(input)\n      \n    },\n\n    async SortAscending(val) {\n      console.log('Up button clicked')\n      console.log(val)\n      axios.post(`http://127.0.0.1:3333/sortCustomerDataAsc`, {\n        columnName: val\n      }).then(response => {\n        this.customerTable = response.data.sort\n      })\n    },\n\n    async SortDescending(val) {\n      console.log('Down button clicked')\n      axios.post(`http://127.0.0.1:3333/sortCustomerDataDesc`, {\n        columnName: val\n      }).then(response => {\n        this.customerTable = response.data.sort\n      })\n    },\n\n\n  },\n\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}