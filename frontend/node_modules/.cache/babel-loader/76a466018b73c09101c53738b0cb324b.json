{"ast":null,"code":"import _regeneratorRuntime from \"/home/kalyan/Documents/WebApplicationBackend/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/kalyan/Documents/WebApplicationBackend/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\nvar axios = require('axios')[\"default\"];\n\nvar instanceOfItem;\nexport default {\n  name: \"HotelCrud\",\n  data: function data() {\n    return {\n      id: '',\n      customer_id: '',\n      hotel_name: '',\n      door_no: '',\n      street: '',\n      landmark: '',\n      city: '',\n      pincode: '',\n      hotelTable: [],\n      valid: '',\n      dialog: false,\n      flag: false,\n      boolValue: true,\n      updateButton: true,\n      submitButton: true\n    };\n  },\n  mounted: function mounted() {\n    this.read();\n  },\n  methods: {\n    read: function read() {\n      var _this = this;\n\n      axios.get(process.env.VUE_APP_SERVER_URL + \"/displayHotelData\").then(function (response) {\n        _this.hotelTable = response.data.data;\n      });\n      console.log(\"Printing hotel table\");\n      console.log(this.hotelTable);\n    },\n    submit: function submit() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var sub;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.post(process.env.VUE_APP_SERVER_URL + \"/insertHotelData\", {\n                  id: _this2.id,\n                  customer_id: _this2.customer_id,\n                  hotel_name: _this2.hotel_name,\n                  door_no: _this2.door_no,\n                  street: _this2.street,\n                  landmark: _this2.landmark,\n                  city: _this2.city,\n                  pincode: _this2.pincode\n                });\n\n              case 2:\n                sub = _context.sent;\n                console.log('Printing submitted details when submit button pressed');\n                console.log(sub);\n\n                _this2.read();\n\n                _this2.dialog = false;\n\n                _this2.$refs.form.reset();\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    press: function press() {\n      this.boolValue = true;\n    },\n    update: function update(row) {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                instanceOfItem = row;\n                console.log(instanceOfItem);\n                console.log('Pencil button clicked');\n                _this3.id = row.id;\n                _this3.customer_id = row.customer_id;\n                _this3.hotel_name = row.hotel_name;\n                _this3.door_no = row.door_no;\n                _this3.street = row.street;\n                _this3.landmark = row.landmark;\n                _this3.city = row.city;\n                _this3.pincode = row.pincode;\n                _this3.boolValue = false;\n                _this3.dialog = true;\n                _this3.submitButton = false;\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    edit: function edit() {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                console.log(\"update button clicked\");\n                console.log(instanceOfItem);\n                _context3.next = 4;\n                return axios.put(\"http://127.0.0.1:3333/updateHotelData/\".concat(instanceOfItem.id), {\n                  customer_id: _this4.customer_id,\n                  hotel_name: _this4.hotel_name,\n                  door_no: _this4.door_no,\n                  street: _this4.street,\n                  landmark: _this4.landmark,\n                  city: _this4.city,\n                  pincode: _this4.pincode\n                });\n\n              case 4:\n                _this4.$refs.form.reset();\n\n                _this4.read();\n\n                _this4.dialog = false;\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    deleteData: function deleteData(id) {\n      var _this5 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return axios[\"delete\"](\"http://127.0.0.1:3333/deleteHotelData/\".concat(id));\n\n              case 2:\n                _this5.read();\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    serachEmpDataReciever: function serachEmpDataReciever(input) {\n      var _this6 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var searchPromise;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return axios.post(process.env.VUE_APP_SERVER_URL + \"/searchHotelData\", {\n                  'term': input\n                });\n\n              case 2:\n                searchPromise = _context5.sent;\n                _this6.hotelTable = searchPromise.data;\n                console.log(input);\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    },\n    SortAscending: function SortAscending(val) {\n      var _this7 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                console.log('Up button clicked');\n                console.log(val);\n                axios.post(process.env.VUE_APP_SERVER_URL + \"/sortHotelDataAsc\", {\n                  columnName: val\n                }).then(function (response) {\n                  _this7.hotelTable = response.data;\n                });\n\n              case 3:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    },\n    SortDescending: function SortDescending(val) {\n      var _this8 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                console.log('Down button clicked');\n                axios.post(process.env.VUE_APP_SERVER_URL + \"/sortHotelDataDesc\", {\n                  columnName: val\n                }).then(function (response) {\n                  _this8.hotelTable = response.data;\n                });\n\n              case 2:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;AAuGA;;AACA;AACA;EACAA,iBADA;EAEAC,IAFA,kBAEA;IACA;MACAC,MADA;MAEAC,eAFA;MAGAC,cAHA;MAIAC,WAJA;MAKAC,UALA;MAMAC,YANA;MAOAC,QAPA;MAQAC,WARA;MASAC,cATA;MAUAC,SAVA;MAWAC,aAXA;MAYAC,WAZA;MAaAC,eAbA;MAcAC,kBAdA;MAeAC;IAfA;EAiBA,CApBA;EAuBAC,OAvBA,qBAuBA;IACA;EAEA,CA1BA;EA6BAC;IAEAC,IAFA,kBAEA;MAAA;;MAEAC;QAEA;MAEA,CAJA;MAMAC;MAEAA;IAEA,CAdA;IAgBAC,MAhBA,oBAgBA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OAEAF;kBAEAlB,aAFA;kBAGAC,+BAHA;kBAIAC,6BAJA;kBAKAC,uBALA;kBAMAC,qBANA;kBAOAC,yBAPA;kBAQAC,iBARA;kBASAC;gBATA,EAFA;;cAAA;gBAEAc,GAFA;gBAeAF;gBAEAA;;gBAEA;;gBAEA;;gBAEA;;cAvBA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAyBA,CAzCA;IA2CAG,KA3CA,mBA2CA;MAEA;IAEA,CA/CA;IAiDAC,MAjDA,kBAiDAC,GAjDA,EAiDA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBAEAC;gBAEAN;gBAEAA;gBAEA;gBAEA;gBAEA;gBAEA;gBAEA;gBAEA;gBAEA;gBAEA;gBAEA;gBAEA;gBAEA;;cA5BA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IA8BA,CA/EA;IAiFAO,IAjFA,kBAiFA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBAEAP;gBAEAA;gBAJA;gBAAA,OAMAD;kBAEAjB,+BAFA;kBAGAC,6BAHA;kBAIAC,uBAJA;kBAKAC,qBALA;kBAMAC,yBANA;kBAOAC,iBAPA;kBAQAC;gBARA,EANA;;cAAA;gBAkBA;;gBAEA;;gBAEA;;cAtBA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAwBA,CAzGA;IA4GAoB,UA5GA,sBA4GA3B,EA5GA,EA4GA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OAEAkB,oEAFA;;cAAA;gBAIA;;cAJA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAMA,CAlHA;IAoHAU,qBApHA,iCAoHAC,KApHA,EAoHA;MAAA;;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OAEAX;kBAAA;gBAAA,EAFA;;cAAA;gBAEAY,aAFA;gBAIA;gBAEAX;;cANA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAQA,CA5HA;IA8HAY,aA9HA,yBA8HAC,GA9HA,EA8HA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBAEAb;gBAEAA;gBAEAD;kBAEAe;gBAFA,GAIAC,IAJA,CAIA;kBAEA;gBAEA,CARA;;cANA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAeA,CA7IA;IA+IAC,cA/IA,0BA+IAH,GA/IA,EA+IA;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;gBAEAb;gBAEAD;kBAEAe;gBAFA,GAIAC,IAJA,CAIA;kBAEA;gBAEA,CARA;;cAJA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAaA;EA5JA;AA7BA","names":["name","data","id","customer_id","hotel_name","door_no","street","landmark","city","pincode","hotelTable","valid","dialog","flag","boolValue","updateButton","submitButton","mounted","methods","read","axios","console","submit","sub","press","update","row","instanceOfItem","edit","deleteData","serachEmpDataReciever","input","searchPromise","SortAscending","val","columnName","then","SortDescending"],"sourceRoot":"src/components","sources":["Hotel.vue"],"sourcesContent":["<template>\n  <v-container>\n    <SearchComponent @empDataSender=\"serachEmpDataReciever($event)\" />\n    <template>\n      <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n        <v-dialog v-model=\"dialog\" max-width=\"600px\">\n          <template v-slot:activator=\"{ on, attrs }\">\n            <v-btn class=\"mb-2\" small @click=\"press()\" v-bind=\"attrs\" v-on=\"on\" fab color=\"indigo\">\n              <v-icon small>mdi-plus</v-icon>\n            </v-btn>\n          </template>\n          <v-card>\n            <v-card-text>\n              <v-row>\n                <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                  <v-text-field v-model=\"id\" outlined label=\"Enter your Id\" required>\n                  </v-text-field>\n                </v-col>\n                <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                  <v-text-field v-model=\"customer_id\" outlined label=\"Enter Customer Id\" required>\n                  </v-text-field>\n                </v-col>\n                <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                  <v-text-field v-model=\"hotel_name\" outlined label=\"Enter Hotel Name\" required>\n                  </v-text-field>\n                </v-col>\n                <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                  <v-text-field v-model=\"door_no\" outlined label=\"Enter Door No\" required>\n                  </v-text-field>\n                </v-col>\n                <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                  <v-text-field v-model=\"street\" outlined label=\"Enter Street Name\" required>\n                  </v-text-field>\n                </v-col>\n                <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                  <v-text-field v-model=\"landmark\" outlined label=\"Enter Landmark\" required>\n                  </v-text-field>\n                </v-col>\n                <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                  <v-text-field v-model=\"city\" outlined label=\"Enter city\" required>\n                  </v-text-field>\n                </v-col>\n                <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                  <v-text-field v-model=\"pincode\" outlined label=\"Enter pincode\" required>\n                  </v-text-field>\n                </v-col>\n              </v-row>\n              <v-btn color=\"success\" v-model=\"submitButton\" @click=\"submit()\" v-if=\"boolValue\">\n                Submit\n              </v-btn>\n              <v-btn color=\"success\" v-model=\"updateButton\" @click=\"edit()\" v-else>\n                Update\n              </v-btn>\n            </v-card-text>\n          </v-card>\n        </v-dialog>\n      </v-form>\n      <div>\n        <v-simple-table fixed-header>\n          <thead>\n            <tr>\n              <th class=\"text-left\">Id\n                <v-icon @click=\"SortAscending(val='id')\">mdi-arrow-up</v-icon>\n                <v-icon @click=\"SortDescending(val='id')\">mdi-arrow-down</v-icon>\n              </th>\n              <th class=\"text-left\">Customer Id\n                <v-icon @click=\"SortAscending(val='customer_id')\">mdi-arrow-up</v-icon>\n                <v-icon @click=\"SortDescending(val='customer_id')\">mdi-arrow-down</v-icon>\n              </th>\n              <th class=\"text-left\">Hotel Name</th>\n              <th class=\"text-left\">Owner</th>\n              <th class=\"text-left\">Address</th>\n              <th class=\"text-left\">Pincode</th>\n              <th class=\"text-left\">Actions</th>\n\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"row,index in hotelTable\" :key=\"row.id\">\n              <td>{{row.id}}</td>\n              <td>{{row.customer_id}}</td>\n              <td>{{row.hotel_name}}</td>\n              <td>{{row.customer_name}}</td>\n              <td>{{row.address.door_no + \", \" + row.address.street + \", \" + row.address.landmark + \", \" +\n              row.address.city}}</td>\n              <td>{{row.pincode}}</td>\n              <td>\n                <v-btn fab class=\"mb-2\" small color=\"cyan\" dark @click=\"update(row)\">\n                  <v-icon small>mdi-pencil</v-icon>\n                </v-btn>\n                <v-btn fab class=\"mb-2\" @click=\"deleteData(row.id)\" small color=\"pink\">\n                  <v-icon small>mdi-delete</v-icon>\n                </v-btn>\n              </td>\n            </tr>\n          </tbody>\n        </v-simple-table>\n      </div>\n    </template>\n  </v-container>\n</template>\n\n<script>\nconst axios = require('axios').default;\nvar instanceOfItem;\nexport default {\n  name: \"HotelCrud\",\n  data() {\n    return {\n      id: '',\n      customer_id: '',\n      hotel_name: '',\n      door_no: '',\n      street: '',\n      landmark: '',\n      city: '',\n      pincode: '',\n      hotelTable: [],\n      valid: '',\n      dialog: false,\n      flag: false,\n      boolValue: true,\n      updateButton: true,\n      submitButton: true,\n    };\n  },\n\n\n  mounted() {\n    this.read()\n\n  },\n\n\n  methods: {\n\n    read() {\n\n      axios.get(process.env.VUE_APP_SERVER_URL + `/displayHotelData`).then(response => {\n\n        this.hotelTable = response.data.data\n\n      })\n\n      console.log(\"Printing hotel table\")\n\n      console.log(this.hotelTable)\n\n    },\n\n    async submit() {\n\n      const sub = await axios.post(process.env.VUE_APP_SERVER_URL + `/insertHotelData`, {\n\n        id: this.id,\n        customer_id: this.customer_id,\n        hotel_name: this.hotel_name,\n        door_no: this.door_no,\n        street: this.street,\n        landmark: this.landmark,\n        city: this.city,\n        pincode: this.pincode\n\n      });\n\n      console.log('Printing submitted details when submit button pressed')\n\n      console.log(sub);\n\n      this.read();\n\n      this.dialog = false;\n\n      this.$refs.form.reset()\n\n    },\n\n    press() {\n\n      this.boolValue = true;\n\n    },\n\n    async update(row) {\n\n      instanceOfItem = row\n\n      console.log(instanceOfItem);\n\n      console.log('Pencil button clicked')\n\n      this.id = row.id;\n\n      this.customer_id = row.customer_id;\n\n      this.hotel_name = row.hotel_name;\n\n      this.door_no = row.door_no;\n\n      this.street = row.street\n\n      this.landmark = row.landmark\n\n      this.city = row.city\n\n      this.pincode = row.pincode\n\n      this.boolValue = false;\n\n      this.dialog = true;\n\n      this.submitButton = false;\n\n    },\n\n    async edit() {\n\n      console.log(\"update button clicked\")\n\n      console.log(instanceOfItem)\n\n      await axios.put(`http://127.0.0.1:3333/updateHotelData/${instanceOfItem.id}`, {\n\n        customer_id: this.customer_id,\n        hotel_name: this.hotel_name,\n        door_no: this.door_no,\n        street: this.street,\n        landmark: this.landmark,\n        city: this.city,\n        pincode: this.pincode\n\n      });\n\n      this.$refs.form.reset()\n\n      this.read()\n\n      this.dialog = false;\n\n    },\n\n\n    async deleteData(id) {\n\n      await axios.delete(`http://127.0.0.1:3333/deleteHotelData/${id}`);\n\n      this.read();\n\n    },\n\n    async serachEmpDataReciever(input) {\n\n      const searchPromise = await axios.post(process.env.VUE_APP_SERVER_URL + `/searchHotelData`, { 'term': input })\n\n      this.hotelTable = searchPromise.data\n\n      console.log(input)\n\n    },\n\n    async SortAscending(val) {\n\n      console.log('Up button clicked')\n\n      console.log(val)\n\n      axios.post(process.env.VUE_APP_SERVER_URL + `/sortHotelDataAsc`, {\n\n        columnName: val\n\n      }).then(response => {\n\n        this.hotelTable = response.data\n\n      })\n    },\n\n    async SortDescending(val) {\n\n      console.log('Down button clicked')\n\n      axios.post(process.env.VUE_APP_SERVER_URL + `/sortHotelDataDesc`, {\n\n        columnName: val\n\n      }).then(response => {\n\n        this.hotelTable = response.data\n\n      })\n    },\n\n  },\n\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}